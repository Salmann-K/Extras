#include<stdio.h>
#include<limits.h>

int checkHit(int incomingPage, int queue[], int occupied){
    for(int i = 0; i < occupied; i++){
        if(incomingPage == queue[i])
            return 1;
    }
    return 0;
}

void printFrame(int queue[], int occupied){
    for(int i = 0; i < occupied; i++)
        printf("%d\t\t", queue[i]);
}

int main(){
    int incomingStream[] = {7,0,1,2,0,3,0,4,2,3,0,3,2,1,2,0,1,7,0,1};
    int n = sizeof(incomingStream)/sizeof(incomingStream[0]);
    for(int i=0; i<n; i++) printf("%d ",incomingStream[i]);
    int frames = 4;
    int queue[n];
    int lastUsed[n];
    int occupied = 0;
    int pagefault = 0;
    printf("\n\nPage\t Frame1 \t Frame2 \t Frame3 \t Frame4\n");
    for(int i = 0; i < n; i++){
        printf("%d:     \t", incomingStream[i]);
        if(checkHit(incomingStream[i], queue, occupied)){
            // Update the last used time of the page
            for(int j = 0; j < occupied; j++){
                if(queue[j] == incomingStream[i]){
                    lastUsed[j] = i;
                    break;
                }
            }
            printFrame(queue, occupied);
        } else if(occupied < frames){
            queue[occupied] = incomingStream[i];
            lastUsed[occupied] = i;
            pagefault++;
            occupied++;
            printFrame(queue, occupied);
        } else {
            // Find the most recently used page
            int maxIndex = 0;
            for(int j = 1; j < occupied; j++){
                if(lastUsed[j] > lastUsed[maxIndex]){
                    maxIndex = j;
                }
            }
            queue[maxIndex] = incomingStream[i];
            lastUsed[maxIndex] = i;
            printFrame(queue, occupied);
            pagefault++;
        }
        printf("\n");
    }
    printf("Page Fault: %d\n", pagefault);
    printf("Page Hit: %d", n - pagefault);
    return 0;
}
