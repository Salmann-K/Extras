#include <stdio.h>
#include <limits.h>

struct Process {
    int id;
    int at;
    int bt;
    int wt;
    int ct;
    int tat;
    int done;
};

void sjf(struct Process p[], int n) {
    int t = 0, comp = 0;
    float twt = 0, ttat = 0;
    for (int i = 0; i < n; i++) {
        p[i].done = 0;
    }
    while (comp < n) {
        int shortest = -1;
        int min_bt = INT_MAX;
        int lm = -1;
        for (int i = 0; i < n; i++) {
            if (p[i].at <= t && p[i].bt <= min_bt && !p[i].done) {
                if(p[i].bt==min_bt && p[i].at<lm){
                    min_bt = p[i].bt;
                    shortest = i;    
                    lm=p[i].at;
                }else{
                    min_bt = p[i].bt;
                    shortest = i;
                }
                
            }
        }
        if (shortest == -1) {
            t++;
        } else {
            p[shortest].ct = t + p[shortest].bt;
            p[shortest].tat = p[shortest].ct - p[shortest].at;
            p[shortest].wt = p[shortest].tat - p[shortest].bt;
            p[shortest].done = 1;
            t = p[shortest].ct;
            comp++;
            twt += p[shortest].wt;
            ttat += p[shortest].tat;
        }
    }
    float awt = twt / n;
    float atat = ttat / n;
    printf("P\tAT\tBT\tCT\tTAT\tWT\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t%d\t%d\t%d\t%d\n", p[i].id, p[i].at, p[i].bt, p[i].ct, p[i].tat, p[i].wt);
    }
    printf("Avg WT: %.2f\n", awt);
    printf("Avg TAT: %.2f\n", atat);
}

int main() {
    int n;
    printf("Enter number of processes: ");
    scanf("%d", &n);
    struct Process p[n];
    for (int i = 0; i < n; i++) {
        p[i].id = i + 1;
        printf("Enter arrival time for process %d: ", i + 1);
        scanf("%d", &p[i].at);
        printf("Enter burst time for process %d: ", i + 1);
        scanf("%d", &p[i].bt);
    }
    sjf(p, n);
    return 0;
}
